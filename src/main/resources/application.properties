# Word2PDF 转换服务配置

# 服务端口
server.port=8080
server.servlet.context-path=/api

# 文件上传配置
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# 字符编码配置 - 确保中文支持
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# 应用基础配置
app.temp-dir=/Users/sunyuan/Desktop/inbox/word2pdf
app.libre-office-path=/Applications/LibreOffice.app/Contents/MacOS/soffice


# Docx4j 优化配置
# 启用详细的字体映射日志
logging.level.org.docx4j.fonts=DEBUG

# 日志配置
logging.level.com.suny.word2pdf=DEBUG
logging.level.org.docx4j=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.file.name=logs/application.log





# 启用 JODConverter 本地转换功能。
# 这是所有本地转换功能正常工作的总开关。
jodconverter.local.enabled=true

# LibreOffice 的安装主目录。
# JODConverter 需要根据此路径找到 soffice(.bin) 执行文件。
# 请务必根据您的服务器操作系统和实际安装位置修改此路径。
# macOS 示例: /Applications/LibreOffice.app/Contents
# Linux 示例: /opt/libreoffice7.6
# Windows 示例: C:/Program Files/LibreOffice
#jodconverter.local.office-home=/Applications/LibreOffice.app/Contents


# ===================================================================
# 进程池与并发配置 (性能核心)
# ===================================================================

# 定义进程池中 LibreOffice 实例的数量，通过指定不同的端口号来实现。
# 这里的 "2002,2003" 表示 JODConverter 会启动并管理 2 个 LibreOffice 进程。
# 这使得系统可以并行处理 2 个转换任务，极大地提升了并发处理能力。
# **最佳实践**: 进程数量建议设置为服务器 CPU 核心数或稍小的值 (例如 N-1)，以达到最佳吞吐量并避免过度资源竞争。
jodconverter.local.port-numbers=2002,2003,2004

# LibreOffice 进程启动时使用的命令行参数。
# 这些参数对于在服务器上以稳定、高效的模式运行至关重要。
# --headless: 无头模式，不在服务器上显示任何图形界面，必需参数。
# --nologo: 启动时不显示 LibreOffice 的 Logo 闪屏，略微加快启动速度。
# --nodefault: 启动时不需要创建一个默认的空白文档。
# --norestore: 禁用崩溃后的文件恢复功能，避免在服务器上出现意外的交互提示。
# --nolockcheck: 禁用实例锁文件检查，避免在多进程环境下因锁文件问题导致启动失败。
# --invisible: 使进程在后台完全不可见。
#jodconverter.local.process-args=--headless,--nologo,--nodefault,--norestore,--nolockcheck,--invisible


# ===================================================================
# 稳定性与自我修复机制 (高可用性核心)
# ===================================================================

# 单个 LibreOffice 进程在处理完指定数量的任务后自动重启。
# 这是防止内存泄漏和性能衰退的“终极武器”。LibreOffice 进程长时间运行后可能会有资源回收不彻底的问题，
# 定期重启可以确保所有进程都保持在“新鲜”的最佳状态。50 是一个比较均衡的值。
jodconverter.local.max-tasks-per-process=50

# JODConverter 等待 LibreOffice 进程成功启动或正常关闭的超时时间。
# 如果一个进程在 60 秒内没有准备就绪或无法关闭，JODConverter 会认为它已失败并可能尝试重启。
# 在性能较差的服务器或虚拟机上，如果进程启动缓慢，可以适当调高此值。
jodconverter.local.process-timeout=60000

# 当一个进程启动失败后，JODConverter 会等待多久再进行下一次重试。
# 500毫秒是一个合理的重试间隔。
jodconverter.local.process-retry-interval=500


# ===================================================================
# 任务执行与超时控制 (防止服务阻塞)
# ===================================================================

# 单个转换任务的最大执行时间，已按您的要求设置为 60 秒。
# 如果一个文件（例如，异常复杂或已损坏）的转换时间超过此值，该任务将被强制终止。
# 这个设置可以有效防止单个“坏”文件长时间占用一个进程，从而阻塞后续所有任务。
jodconverter.local.task-execution-timeout=300000

# 当进程池中所有进程都在忙碌时，新任务进入队列后的最长等待时间。
# 如果一个任务在队列中等待了 10 秒仍未分配到可用进程，它将被拒绝并抛出异常。
# 这是一个重要的“服务降级”或“背压”策略，可以防止在突发高并发下请求队列无限堆积，最终耗尽系统内存。
# 原配置的 1s (1000ms) 过于激进，10s 更为从容。
jodconverter.local.task-queue-timeout=100000


# ===================================================================
# 可选的调试日志配置
# ===================================================================

# 如果需要排查 JODConverter 的问题，可以取消下面这行注释来开启 DEBUG 级别的详细日志。
# 在生产环境中建议保持关闭（或使用 INFO 级别）。
logging.level.org.jodconverter=DEBUG

# 启用LibreOffice进程相关的详细日志
logging.level.org.jodconverter.local=DEBUG
logging.level.org.jodconverter.local.office=DEBUG
logging.level.org.jodconverter.local.process=DEBUG

# 启用任务执行相关的日志
logging.level.org.jodconverter.local.task=DEBUG

# 启用UNO连接相关的日志  
logging.level.org.jodconverter.core.office=DEBUG
